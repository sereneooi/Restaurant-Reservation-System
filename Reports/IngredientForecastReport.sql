-- Cancellation Report for Each Country
SET serveroutput on
SET PAGESIZE 100
SET LINESIZE 200 
SET UNDERLINE =
SET VERIFY OFF

PROMPT Ingredient Forecast Report
PROMPT ==========================
ACCEPT IN_DAY PROMPT 'Enter Day: '

CREATE OR REPLACE VIEW PREV_WASTAGE AS
    SELECT SUM(TOTAL_WASTED_MONEY) AS TOTAL_WASTED_MONEY
    FROM (
        SELECT MI.ITEMNAME, ((SUM(I.INGREDIENTQTY) - SUM(OD.ITEMQTY)) * AVG(I.PRICE)) AS TOTAL_WASTED_MONEY
        FROM INGREDIENT I
        INNER JOIN INGREDIENTITEM II ON I.INGREDIENTID = II.INGREDIENTID
        INNER JOIN MENUITEM MI ON II.ITEMID = MI.ITEMID
        INNER JOIN SUPPLIER S ON S.SUPPLIERID = I.SUPPLIERID
        INNER JOIN ORDERDETAILS OD ON OD.ITEMID = MI.ITEMID
        INNER JOIN ORDERS O ON O.ORDERID = OD.ORDERID 
        WHERE UPPER(TO_CHAR(TO_DATE(O.ORDERCREATIONDATE, 'DD/MM/YYYY'), 'DY')) = UPPER('&IN_DAY')
        GROUP BY TO_CHAR(TO_DATE(O.ORDERCREATIONDATE, 'DD/MM/YYYY'), 'DY'), MI.ITEMNAME
    );

CREATE OR REPLACE PROCEDURE IngredientReport(IN_DAY IN VARCHAR) IS
    v_total_wasted NUMBER(8,2) := 0;
    v_count NUMBER(2) := 1;

CURSOR IN_CUR IS
    SELECT TO_CHAR(TO_DATE(O.ORDERCREATIONDATE, 'DD/MM/YYYY'), 'DY') AS "DAY OF WEEK", 
       ROUND(AVG(I.INGREDIENTQTY)) AS QTY,
       AVG(I.PRICE) AS AVG_PRICE,
       MI.ITEMNAME, ROUND(AVG(OD.ITEMQTY)) AS ORDERED_QTY, ROUND(AVG(I.INGREDIENTQTY) - AVG(OD.ITEMQTY)) AS REMAINING_QTY, 
       ROUND(AVG(OD.ITEMQTY) + 5) AS RECOMMENDED_QTY_TO_PURCHASE
    FROM INGREDIENT I
    INNER JOIN INGREDIENTITEM II ON I.INGREDIENTID = II.INGREDIENTID
    INNER JOIN MENUITEM MI ON II.ITEMID = MI.ITEMID
    INNER JOIN SUPPLIER S ON S.SUPPLIERID = I.SUPPLIERID
    INNER JOIN ORDERDETAILS OD ON OD.ITEMID = MI.ITEMID
    INNER JOIN ORDERS O ON O.ORDERID = OD.ORDERID 
    WHERE UPPER(TO_CHAR(TO_DATE(O.ORDERCREATIONDATE, 'DD/MM/YYYY'), 'DY')) = UPPER(IN_DAY)
    GROUP BY TO_CHAR(TO_DATE(O.ORDERCREATIONDATE, 'DD/MM/YYYY'), 'DY'),
            MI.ITEMNAME
    ORDER BY QTY DESC;

    t_rec IN_CUR%ROWTYPE;

BEGIN
    BEGIN
        SELECT * INTO v_total_wasted FROM PREV_WASTAGE;
    END;

    DBMS_OUTPUT.PUT_LINE(LPAD ('-', 160, '-'));
    DBMS_OUTPUT.PUT_LINE(' | '|| LPAD('OT COMPANY ', 80, ' ') || LPAD(' | ', 79));
    DBMS_OUTPUT.PUT_LINE(' | '|| LPAD('---------- ', 80, ' ') || LPAD(' | ', 79));
    DBMS_OUTPUT.PUT_LINE(' | '|| LPAD('INGREDIENT FORECAST REPORT FOR ', 85, ' ') || IN_DAY || LPAD(' | ', 71));
    DBMS_OUTPUT.PUT_LINE(' | '|| LPAD('DATE: ', 73, ' ') || SYSDATE || LPAD(' | ', 77));
    DBMS_OUTPUT.PUT_LINE(LPAD ('-', 160, '-'));
    
    DBMS_OUTPUT.PUT_LINE(
        RPAD('| ' || 'NO', 8) ||
        RPAD('| ' || 'MENU', 59) ||
        RPAD('| ' || 'UNIT PRICE', 20) ||
        RPAD('| ' || 'PREVIOUS ORDERED QTY', 19) ||
        RPAD('| ' || 'REMAINING QTY', 23) ||
        RPAD('| ' || 'RECOMMENDED QTY TO PURCHASE', 30) || '|'
    );
    DBMS_OUTPUT.PUT_LINE(LPAD ('-', 160, '-'));

    FOR t_rec IN IN_CUR LOOP
        DBMS_OUTPUT.PUT_LINE(
            RPAD('| ' || v_count, 8) ||
            RPAD('| ' || t_rec.ITEMNAME, 59) ||
            RPAD('| RM ' || TO_CHAR(t_rec.AVG_PRICE, '999,999.99'), 20) ||
            RPAD('| ' || t_rec.QTY, 19) ||
            RPAD('| ' || t_rec.REMAINING_QTY, 23) ||
            RPAD('| ' || t_rec.RECOMMENDED_QTY_TO_PURCHASE, 30) || '|'
        );

    v_count := v_count + 1;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE(LPAD ('-', 160, '-'));
    DBMS_OUTPUT.PUT_LINE(LPAD('================================================', 159));
    DBMS_OUTPUT.PUT_LINE('TOTAL WASTED AMOUNT IN THE PAST: RM ' || TO_CHAR(v_total_wasted, '999,999.99'));
    DBMS_OUTPUT.PUT_LINE(LPAD('================================================', 159));

    DBMS_OUTPUT.PUT_LINE(chr(10));
    DBMS_OUTPUT.PUT_LINE(' . '|| LPAD('End Of Report. ', 80, ' ') || LPAD(' . ', 79));
END;
/

EXEC IngredientReport('&IN_DAY');